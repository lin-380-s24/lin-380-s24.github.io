[
  {
    "objectID": "posts/eulc5/index.html",
    "href": "posts/eulc5/index.html",
    "title": "Conference Announcement: Emory Undergraduate Linguistics Conference 5 (EULC5)",
    "section": "",
    "text": "Emory University’s Program in Linguistics is hosting the fifth annual Emory Undergraduate Linguistics Conference (EULC5) virtually. We are inviting undergraduate students and recent B.A./B.S. graduates to submit abstracts from all subfields of linguistics.\nAbstract submissions will be considered for poster and oral presentations. When submitting, you may indicate your preference for consideration for one or both types of presentations in the comment box. All abstracts will be reviewed anonymously. You may submit abstracts for projects that are either in progress or have been completed. Please ensure that your abstract is less than 500 words, excluding figures and references.\nDeadline for Abstracts: March 15th, 2024\nNotifications: By March 29th, 2024\nConference Date: April 19th, 2024 (One day virtual event)\nIf you have any questions, please email at eulc@emory.edu\nSubmissions open: Jan. 3, 2024 - March 20, 2024\nAbstract review period: March 16, 2024 - March 29, 2024\nhttps://easyabs.linguistlist.org/conference/EULC5"
  },
  {
    "objectID": "posts/eulc5/index.html#emory-undergraduate-linguistics-conference-5-eulc5",
    "href": "posts/eulc5/index.html#emory-undergraduate-linguistics-conference-5-eulc5",
    "title": "Conference Announcement: Emory Undergraduate Linguistics Conference 5 (EULC5)",
    "section": "",
    "text": "Emory University’s Program in Linguistics is hosting the fifth annual Emory Undergraduate Linguistics Conference (EULC5) virtually. We are inviting undergraduate students and recent B.A./B.S. graduates to submit abstracts from all subfields of linguistics.\nAbstract submissions will be considered for poster and oral presentations. When submitting, you may indicate your preference for consideration for one or both types of presentations in the comment box. All abstracts will be reviewed anonymously. You may submit abstracts for projects that are either in progress or have been completed. Please ensure that your abstract is less than 500 words, excluding figures and references.\nDeadline for Abstracts: March 15th, 2024\nNotifications: By March 29th, 2024\nConference Date: April 19th, 2024 (One day virtual event)\nIf you have any questions, please email at eulc@emory.edu\nSubmissions open: Jan. 3, 2024 - March 20, 2024\nAbstract review period: March 16, 2024 - March 29, 2024\nhttps://easyabs.linguistlist.org/conference/EULC5"
  },
  {
    "objectID": "slides.html",
    "href": "slides.html",
    "title": " Slides",
    "section": "",
    "text": "The slide decks used in class are available here and are updated as the course progresses.\n\n\n\n\n  \n\n\n\n\nIntroductions\n\n\nCourse goals, the approach, and the resources\n\n\n\n\nsyllabus\n\n\nresources\n\n\nguides\n\n\n \n\n\n\n\nJan 17, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "guides/getting-started.html",
    "href": "guides/getting-started.html",
    "title": "Getting started",
    "section": "",
    "text": "In this course, we will be using a virtual computing envionment to set up the resources and tools we need. This will allow us to work in a consistent environment, where we can be sure that all the tools we need are available and working."
  },
  {
    "objectID": "guides/getting-started.html#what-is-a-virtual-computing-environment",
    "href": "guides/getting-started.html#what-is-a-virtual-computing-environment",
    "title": "Getting started",
    "section": "What is a virtual computing environment?",
    "text": "What is a virtual computing environment?\n\nA virtual computing environment is a way of setting up a computer that is isolated from your main computer. This means that you can install software and make changes to the environment without affecting your main computer. It also means that you can share your environment with others, so that they can use the same tools and resources as you.\nI have build and will share with you a virtual computing environment that contains all the tools we need for this course. This environment is based on Docker, which is a tool for creating and managing virtual computing environments.\nTo be able to use this environment, you will need to install Docker on your computer. Navigate to the Docker website and follow the instructions for installing Docker on your computer.\n\nMac instructions\nWindows instructions"
  },
  {
    "objectID": "guides/getting-started.html#setting-up-the-virtual-computing-environment",
    "href": "guides/getting-started.html#setting-up-the-virtual-computing-environment",
    "title": "Getting started",
    "section": "Setting up the virtual computing environment",
    "text": "Setting up the virtual computing environment\nOnce you have Docker Desktop up and running, the next step is to download the virtual computing environment that I have created for this course. This is called a Docker image, and it contains all the tools and resources we need for this course. We will navigate to the “Images” tab in Docker Desktop and search for the image called francojc/lin-380. Once you have found it, click on the “Pull” button to download the image.\n\n\n\nPull the image from Docker Hub\n\n\nOnce the image has been downloaded, you will see it in the list of images in Docker Desktop. You can now click on the “Run” button to build a container based on this image.\nYou will need to fill out the following configuration options:\n\nName: Give your container a name. This can be anything you like.\nPorts: This is where you can specify which ports on your computer should be accessible from inside the container. We will be using port 8787 for RStudio Server, so you can enter 8787 in the “Local Port” field and 8787 in the “Container Port” field.\nVolumes: This is where you can specify which folders on your computer should be accessible from inside the container. On the left hand side, click on the “Add” button and select the folder where you want to store your work for this course. On the right hand side, enter /home/rstudio/Workpace as the path inside the container.\nEnvironment variables: This is where you can specify environment variables that will be available inside the container. We will be using an environment variable called PASSWORD to set the password for RStudio Server. On the left hand side, type ‘PASSWORD’ in the “Key” field and the password you want to use in the “Value” field.\n\nOnce you have filled out all the configuration options, click on the “Run” button.\n\n\n\nRun the container\n\n\nThis will start a virtual computing environment that contains all the tools and resources we need for this course. To access this environment, open the “Containers” tab in Docker Desktop, find the container you just created, and click the link 8787:8787 under “Port(s)”. This will open RStudio Server in your web browser.You will be prompted to log in to RStudio Server. Use the username rstudio and the password you specified in the configuration options.\n\n\n\nLog in to RStudio Server\n\n\n\n\n\n\n\n\nRemember that the password you specified in the configuration options is only for RStudio Server. It is not the password for your computer. Remember this password, as you will need it to log in to RStudio Server in the future!"
  },
  {
    "objectID": "guides/getting-started.html#sharing-files-between-your-computer-and-the-virtual-computing-environment",
    "href": "guides/getting-started.html#sharing-files-between-your-computer-and-the-virtual-computing-environment",
    "title": "Getting started",
    "section": "Sharing files between your computer and the virtual computing environment",
    "text": "Sharing files between your computer and the virtual computing environment\nYour computer is what is known as the “Host”. The virtual computing environment is attached, but isolated from your computer. This is a great benefit to virtual computing so that you can install software and make changes to the environment without affecting your main computer. The downside of this isolation is that the virtual computing environment does not have access to the files on your computer, by default.\nHowever, when you created the container, you specified a folder on your computer (“Host path”) that should be accessible from inside the container through the /home/rstudio/Workspace folder (“Container path”). This is known as a “Volume”. This connection between your computer and the virtual computing environment is the only way to share files between the two directly.\n\n\n\nSharing files between the container and your computer\n\n\nThis connection between Host path and Container path is a two-way street. This means that any files you create in the /home/rstudio/Workspace folder inside the container will be available in the folder you specified on your computer. Similarly, any files you create in the folder you specified on your computer will be available in the /home/rstudio/Workspace folder inside the container.\n\n\n\n\n\n\nVery important\nYou cannot change the Host path or the Container path after you have created the container. If you need to change the Host path or the Container path, you will need to delete the container and create a new one."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": " Syllabus",
    "section": "",
    "text": "Name: Dr. Jerid Francom\nPronouns: he/him/his\nEmail: francojc@wfu.edu\nOffice: Greene Hall 550\nAppointments:"
  },
  {
    "objectID": "index.html#instructor",
    "href": "index.html#instructor",
    "title": " Syllabus",
    "section": "",
    "text": "Name: Dr. Jerid Francom\nPronouns: he/him/his\nEmail: francojc@wfu.edu\nOffice: Greene Hall 550\nAppointments:"
  },
  {
    "objectID": "index.html#course",
    "href": "index.html#course",
    "title": " Syllabus",
    "section": "Course",
    "text": "Course\n\nDescription\nAre you curious about how to use technology to unlock hidden insights from text? Do you want to become a skilled researcher who can analyze textual data in a way that is rigorous, reproducible, and insightful? In this course, you will learn how to harness the power of computational tools to explore and interpret text in a way that supports meaningful research questions in Linguistics and language science.\nThroughout the course, you will gain valuable skills in data analysis and interpretation, research design and implementation, programming, and collaboration. You will learn how to collect, organize, and analyze textual data in a way that ensures your findings are valid, reliable, and impactful. You will also gain hands-on experience with the R programming language, a powerful tool for conducting text analysis and automating data analysis processes.\nBy the end of the course, you will be able to design and apply appropriate research designs to address research questions based on textual data, implement text analysis techniques using computational tools, and communicate your research findings effectively through written reports and oral presentations. You will also be able to collaborate with your peers and the research community through publicly sharing and implementing reproducible research projects.\nJoin us for an exciting journey into the world of quantitative text analysis and unlock new insights into language, culture, and society!\n\n\nLearning outcomes\nBy the end of this course you will be able to:\nA. Identify, interpret and evaluate data analysis procedures and results\n\nIdentify the impact of research decisions (data collection, organization, and analysis) on research findings.\nInterpret, assess, and contextualize the analysis of textual data to support research questions.\nEvaluate the validity and reliability of findings based on textual data.\n\nB. Design, implement, and communicate research\n\nDesign and apply appropriate research designs to address research questions related to language science.\nImplement text analysis techniques using computational tools to derive insights from textual data.\nCommunicate research findings effectively through written reports and oral presentations.\n\nC. Apply programmatic strategies to develop and collaborate on reproducible research projects\n\nConduct text analysis and automate text analysis processes using the R programming language.\nDevelop a detailed protocol that clearly outlines the research question, methodology, and analysis plan including documentation of the data sources, the sampling strategy, and the statistical analysis which align with reproducible research practices.\nCollaborate with peers and the research community through publicly sharing and implementing reproducible research projects.\n\n\n\nResources\n\nFrancom, J (forthcoming). An Introduction to Quantitative Text Analysis for Linguistics: Reproducible Research using R. Routledge Press.\n\nR package and companion website\n\nGitHub: A free account (sign up for the Student Developer Pack).\nHypothes.is: A free account.\n\n\n\nPrerequisites\nThis course takes a pedagogical approach which assumes no prior experience with statistics or programming, making it an accessible resource for novices beginning their exploration of quantitative text analysis methods. However, it is recommended that students have some familiarity with linguistics and/or language science research and research methods."
  },
  {
    "objectID": "index.html#approach",
    "href": "index.html#approach",
    "title": " Syllabus",
    "section": "Approach",
    "text": "Approach\n\nBuilding community\nBuilding a community of learners is at the heart of enriching courses. It is key to keep in mind that each one of us is intrinsically motivated to know more about the world –that’s why we are all here! The experience of learning, however solitary it may seem at times, is best achieved in collaboration with others on their educational journey. Each of us brings important and valuable life experiences and academic knowledge and interests that are vital elements to making our class exceptional. Don’t check yourself at the classroom door! Engage, reflect, share, and discuss. Take risks, ask questions, and let’s embark on this intellectual journey together.\n\n\nTransparency and responsibility\nIn my view, any course is not an island to itself. In an educational journey, a course provides you opportunities to grow both in learning content and the meta-process of learning how to learn. I will approach this course in precisely this way: I am more concerned with process than product. In this course (and in all courses) the material will prove challenging at times. This is a good thing. You will learn a lot, but you likely will not “learn it all” –I’m still learning! Learning is as much about success as it is trial and error. I will highly value trial as it provides an opportunity to err and learn. As part of this process, I will ask you to reflect on your process –when you seek support and how you find it. Your responsibility is to own your learning, collaborate with peers, seek and discover, and contribute to the learning of your peers (as well as mine). My responsibility is to provide the scaffolding and guidance to get you started on (or rather, continue) your journey.\n\n\nDiversity & inclusion\nI am committed to developing and supporting an ongoing environment that serves students from all diverse backgrounds and where diversity is viewed as a resource, strength, and benefit to our learning community. It is my goal to present materials and provide options for activities that are respectful to gender, sexuality, disability, age, socioeconomic status, ethnicity, race, and culture. Despite my best efforts, there may still be ways to improve the effectiveness of this course for you personally or for other students or student groups. Your suggestions for improvement are encouraged and appreciated.\n\n\nFlexibility\nI start this semester by acknowledging the social, political, and medical challenges that all of us face. I recognize that some of you are more impacted than others and that many of you may be learning from a place of anxiety, uncertainty, and trauma. I will stay cognizant of this throughout the semester, especially as I make teaching decisions. If there are ways I can make your learning experience better, please let me know."
  },
  {
    "objectID": "index.html#learning-program",
    "href": "index.html#learning-program",
    "title": " Syllabus",
    "section": "Learning program",
    "text": "Learning program\nThe course is grouped into five learning modules: (1) Orientation, (2) Foundations, (3) Preparation, (4) Analysis, and (5) Communication. The goal of each module is to build your conceptual knowledge and practical programming skills towards developing an original text analysis project prospectus/ final project which will showcase your knowledge and skills with a tangible, shareable, and reproducible research product.\nThe opening of each module will be signaled by the seedling icon (🌱). Each module targets a set of essential questions. Each of these modules in turn is composed of a series of daily activities that will guide us through topics that will help us address each of these essential questions. Days signaled by a water drop icon (💧) will include learning materials and group and individual activities to build our skills and knowledge on a particular conceptual topic. Days signaled by a branch icon (🌿) will include learning materials geared towards the practical application of conceptual knowledge through programming demonstrations and lab activities. Days signaled by a tree icon (🌳) are dedicated to project development activities."
  },
  {
    "objectID": "index.html#assessment",
    "href": "index.html#assessment",
    "title": " Syllabus",
    "section": "Assessment",
    "text": "Assessment\nIn line with my view that learning is a process, not a product, individual learning activities will be assessed through qualitative feedback, peer review, and self-assessment –but will not be assigned a grade by the instructor. Instead, you will be asked to provide a self-assessment of your learning progress periodically during the semester and a final process letter at the end of classes. As a final grade is an institutional requirement, during the final examination period I will meet with students individually to critically assess their learning progress (including self-assessments and a process letter) and determine an appropriate final course grade.\n\nModule-based components\nEngagement discussions\nThese discussions will ask you to reflect on your preliminary reactions to the learning materials and collaborate with your peers to establish, clarify, and discover new connections.\nExpansion activities\nThese will be a series of interactive coding (‘swirl’) and lab activities that aim to employ your conceptual knowledge and develop your R programming skills.\n\n\nProject components\nProject activities\nThese activities are aimed at developing students’ research and technical implementation skills through a project on a specific topic determined by student interest.\nProject prospectus\nThe project prospectus is the culmination of the project activities and a demonstration of the student’s ability to envision and document a text analysis research project of their own design. It contain a detailed protocol that clearly outlines the research question, methodology, and analysis plan including documentation of the data sources, the sampling strategy, and the statistical analysis which align with reproducible research practices.\nFinal project (graduate students, optional for undergraduates)\nThe final project is a demonstration of the student’s ability to bring to fruition a text analysis research project of their own design and implementation. In addition to the project prospectus, the final project will carry out the research plan outlined in the prospectus and include a written report communicating the findings."
  },
  {
    "objectID": "index.html#policies",
    "href": "index.html#policies",
    "title": " Syllabus",
    "section": "Policies",
    "text": "Policies\n\nProfessionalism\nWe abide by the WFU Honor System in this course; academic dishonesty is not tolerated and will be handled according to the policies in the student handbook.\n\n\nAccommodations\nWake Forest University provides reasonable accommodations to students with disabilities. If you are in need of an accommodation, then please contact me privately as early in the term as possible. Retroactive accommodations will not be provided. Students requiring accommodations must also consult the Center for Learning, Access, and Student Success (118 Reynolda Hall, 336-758-5929)."
  },
  {
    "objectID": "guides.html",
    "href": "guides.html",
    "title": " Guides",
    "section": "",
    "text": "Getting started\n\n\n\nrstudio\n\n\ndocker\n\n\n\nHow to set up your computer for this course using Docker containers.\n\n\n\n\n\n\n\n\n\n\n\n\n\nManaging Docker and RStudio Server\n\n\n\nrstudio\n\n\ndocker\n\n\n\nHow to start, stop, and restart a Docker container and RStudio Server.\n\n\n\n\n\n\n\n\n\n\n\nGet up to speed with Git and GitHub\n\n\n\nrstudio\n\n\ngit\n\n\ngithub\n\n\n\nA short introduction to Git and GitHub repositories, and how to clone them to your computer.\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "news.html",
    "href": "news.html",
    "title": " News",
    "section": "",
    "text": "Conference Announcement: Emory Undergraduate Linguistics Conference 5 (EULC5)\n\n\n\n\n\n\n\nnews\n\n\nconferences\n\n\nresearch\n\n\n \n\n\n\n\nJan 16, 2024\n\n\n\n\n\n\n  \n\n\n\n\nHello, World!\n\n\n\n\n\n\n\nnews\n\n\ntesting\n\n\n \n\n\n\n\nJan 15, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "guides/managing-docker-rstudio.html",
    "href": "guides/managing-docker-rstudio.html",
    "title": "Managing Docker and RStudio Server",
    "section": "",
    "text": "This guide assumes you’ve set up a Docker container with RStudio Server according to the instructions in the Getting started guide."
  },
  {
    "objectID": "guides/managing-docker-rstudio.html#stop-docker-container-and-rstudio-server",
    "href": "guides/managing-docker-rstudio.html#stop-docker-container-and-rstudio-server",
    "title": "Managing Docker and RStudio Server",
    "section": "Stop Docker container and RStudio Server",
    "text": "Stop Docker container and RStudio Server\nIf you are continuing from the Getting started guide, your Docker container is running and RStudio Server is running inside the container, as shown below.\n \nThe browser window where RStudio Server appears can be closed and reopened at any time. You will not lose any work or data as the Docker container will continue to run in the background.\nYou could always just leave the Docker container running, the Docker Desktop application will reduce the amount of resources it uses when you are not actively using it. However, You may want to stop the Docker container. You have two options: (1) stop the container and leave Docker Desktop running, or (2) quit Docker Desktop entirely.\nTo stop the container and leave Docker Desktop running, navigate to the “Containers” tab in Docker Desktop and find the container you want to stop. Click the “Stop” button ‘’ next to the container. Caution: Do not click the “Delete” button ‘’ as this will delete the container and all of its data.\n\n\n\nStop the Docker container\n\n\nThe container will stop and the “Status” column will change to “Exited”. Docker Desktop is running, but the container is not and the connection to the RStudio Server shut down.\n\n\n\nRStudio Server shut down\n\n\nTo quit Docker Desktop entirely, click the Docker Desktop icon in the menu bar and select “Quit Docker Desktop”. This will stop all running containers and shut down Docker Desktop."
  },
  {
    "objectID": "guides/managing-docker-rstudio.html#restart-docker-container-and-rstudio-server",
    "href": "guides/managing-docker-rstudio.html#restart-docker-container-and-rstudio-server",
    "title": "Managing Docker and RStudio Server",
    "section": "Restart Docker container and RStudio Server",
    "text": "Restart Docker container and RStudio Server\nTo start Docker Desktop, click the Docker Desktop icon in the menu bar and select “Open Docker Desktop”. This will start Docker Desktop. You will need to wait a few seconds for Docker Desktop to start.\nYou can then restart the container by navigating to the “Containers” tab in Docker Desktop and clicking the “Start” button ‘’ for your container. Note you will not need to add the configuration options again, as they are saved in the container.\n\n\n\nRestart your Docker container\n\n\nYou can now open RStudio Server in your browser again and continue working."
  },
  {
    "objectID": "guides/get-up-with-git.html",
    "href": "guides/get-up-with-git.html",
    "title": "Get up to speed with Git and GitHub",
    "section": "",
    "text": "In this guide, you’ll learn how to use Git and GitHub to gain access to materials for this course."
  },
  {
    "objectID": "guides/get-up-with-git.html#what-is-git-and-github",
    "href": "guides/get-up-with-git.html#what-is-git-and-github",
    "title": "Get up to speed with Git and GitHub",
    "section": "What is Git and GitHub?",
    "text": "What is Git and GitHub?\n\nAs I mentioned in earlier posts, one of the major benefits of using Docker is that it allows for sharing a complete computational environment. The francojc/lin-380 image that you pulled in Docker Desktop and ran to create the container for this course is a good example of this. It contains all the software you need to run the course materials, including R, RStudio, and most of the R packages we’ll use.\nIncluded in this software is a utility called git. Git is a version control system that allows you to track changes to files and collaborate with others. It’s a powerful tool that is widely used in software development, and it’s also useful for managing changes to data analysis projects.\nThe git software is the underlying technology that powers GitHub, a web-based platform for hosting and sharing code. GitHub is where many of the resources for the course are hosted (Labs, in particular), and later in the course you’ll use it to submit your work and collaborate with peers."
  },
  {
    "objectID": "guides/get-up-with-git.html#first-steps-with-git-and-github-cloning-a-repository",
    "href": "guides/get-up-with-git.html#first-steps-with-git-and-github-cloning-a-repository",
    "title": "Get up to speed with Git and GitHub",
    "section": "First steps with Git and GitHub: cloning a repository",
    "text": "First steps with Git and GitHub: cloning a repository\nThere are a few terms that are useful to know before working with Git and GitHub. Let’s start with a few of the most important ones as we get started learning how to clone a repository.\nStorage\n\nRepository (or “repo”): A repository is a collection of files and folders that are tracked by Git. Repositories can be hosted on GitHub, or they can be local to your computer.\nRemote: A remote is a repository that is hosted on a server, such as GitHub.\nLocal: A local repository is one that is stored on your computer.\n\nActions\n\nClone: To clone a repository is to create a local copy of a remote repository on your computer.\n\nLet’s start with these terms and concepts in mind as we work through the next few steps.\n\nCloning a repository\nOne of the first things you’ll do with Git and GitHub is to clone a repository. As stated above, cloning a repository is the process of creating a local copy of a remote repository on your computer.\nLet’s take the GitHub repository for Lab 00 as an example. It is hosted on GitHub. For this course, I created a GitHub organization called lin-380-s24. Within this organization, I’ve created a number of repositories we will use in this course. One of these is called lab-00. You can find it at the following URL: https://github.com/lin-380-s24/lab-00.\nLab 00 (and all the other repos in our course organization) is a public repository, which means that anyone can view it and copy it to their computer. Again, in Git-speak, copying a repository to your local computer is called “cloning” it. To clone the repository for Lab 00, you only need to retrieve the URL to the repository from GitHub. You can find this by clicking the big blue “Code” button on the repository page, and then copying the URL that appears in the box that pops up under ‘Clone’.\n\n\n\nGet the URL to clone a repository\n\n\nOnce you have the URL, you can use RStudio to clone the repository to your computer. So before we go further, make sure that you have started the container and are logged in to RStudio Server.\n. . .\nOnce you have the container running and are logged in to RStudio Server, you can clone the repository by clicking on the “New Project” button in the upper left corner of the RStudio toolbar or “File” drop-down menu. This will open a dialog box with a number of options for creating a new project. Select “Version Control” and then “Git”.\nThis will open a dialog box where you can enter the URL for the repository you want to clone. Paste the URL for the Lab 00 repository into the box, open the folder where you want the project to download to1, and click “Create Project”. This will create a new project in RStudio that contains the files and folders from the Lab 00 repository!\n\n\n\nUse RStudio to clone a GitHub repo\n\n\nThere is much more to learn about Git and GitHub, but this is enough to get you started.\nNote: We used RStudio projects to help us clone this repository, but RStudio projects are useful for other reasons as well. We’ll also have more to say about them later in the course."
  },
  {
    "objectID": "guides/get-up-with-git.html#footnotes",
    "href": "guides/get-up-with-git.html#footnotes",
    "title": "Get up to speed with Git and GitHub",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nI recommend you choose the Workspace/ folder so that this, and other projects, are copied to your local computer.↩︎"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Hello, World!",
    "section": "",
    "text": "This is the first post!"
  },
  {
    "objectID": "schedule.html",
    "href": "schedule.html",
    "title": " Schedule",
    "section": "",
    "text": "Note: This schedule is tentative. The syllabus will be updated as the course develops. If you have any questions, please contact the instructor.\n\n\n\n\n\n\n\n  \n    \n    \n      \n      Day\n      Date\n      Focus\n      Reading\n      Slides\n      Labs\n      Project\n      Assessment\n    \n  \n  \n    \n      🌱 Orientation\n    \n    💧\n1\nJan 17\nIntro course and resources\n\n\n\n\n\n    🌿\n2\nJan 19\nWriting with code\n\n\n\n\n\n    💧\n3\nJan 24\nText Analysis\n\n\n\n\n\n    🌿\n4\nJan 26\nAcademic writing with Quarto\n\n\n\n\n\n    \n      🌱 Foundations\n    \n    💧\n5\nJan 31\nData\n\n\n\n\n\n    🌿\n6\nFeb 2\nReading, inspecting, and writing data\n\n\n\n\n\n    💧\n7\nFeb 7\nAnalysis\n\n\n\n\n\n    🌿\n8\nFeb 9\nDescriptive assessment of datasets\n\n\n\n\n\n    💧\n9\nFeb 14\nResearch\n\n\n\n\n\n    🌿\n10\nFeb 16\nScaffolding a research project\n\n\n\n\n\n    🌳\n11\nFeb 21\nBlueprint\n\n\n\n\n\n    \n      🌱 Preparation\n    \n    💧\n12\nFeb 23\nAcquire\n\n\n\n\n\n    🌿\n13\nFeb 28\nCollecting and documenting data\n\n\n\n\n\n    💧\n14\nMar 1\nCurate\n\n\n\n\n\n    🌿\n15\nMar 6\nOrganizing and documenting data\n\n\n\n\n\n    💧\n16\nMar 8\nTransform\n\n\n\n\n\n    🌿\n17\nMar 20\nTransforming and documenting data\n\n\n\n\n\n    \n      🌱 Analysis\n    \n    💧\n18\nMar 22\nExplore\n\n\n\n\n\n    🌿\n19\nMar 27\nEmploying exploratory methods\n\n\n\n\n\n    💧\n20\nMar 29\nPredict\n\n\n\n\n\n    🌿\n21\nApr 3\nBuilding predictive models\n\n\n\n\n\n    💧\n23\nApr 5\nInfer\n\n\n\n\n\n    🌿\n24\nApr 10\nBuilding inferential models\n\n\n\n\n\n    \n      🌱 Communication\n    \n    💧\n25\nApr 12\nContribute\n\n\n\n\n\n    🌿\n25\nApr 17\nSharing research\n\n\n\n\n\n    🌳\n26\nApr 19\nWorkshop\n\n\n\n\n\n    🌳\n27\nApr 24\nShowcase\n\n\n\n\n\n    🌳\n28\nApr 26\nShowcase\n\n\n\n\n\n    🌳\n29\nMay 1\nWrite-up\n\n\n\n\n\n    \n      🌻 Finalize\n    \n    \n\nMay 7\nIndividual sessions"
  }
]