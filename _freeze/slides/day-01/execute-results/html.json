{
  "hash": "e68e8a680efa012aa2939c67be9d5428",
  "result": {
    "markdown": "---\ntitle: \"Welcome!\"\nsubtitle: \"Quantitative Text Analysis\"\ndate: \"2024-01-17\"\ncategories: [syllabus, resources, guides]\ndraft: true\n---\n\n\n# Introductions\n\n![](assets/images/hello-hand.jpg)\n\n# {background-image=\"assets/images/lin-380-flyer.png\" background-size=\"80%\"}\n\n# Overview\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n- Course goals\n- Approach\n- Resource setup\n- Getting help\n:::\n\n::: {.column width=\"50%\"}\n\n![](assets/images/data-scientist.jpg)\n\n:::\n\n::::\n\n::: {.notes}\nSpeaker notes go here.\n:::\n\n## Course goals\n\n::: {.callout}\n**{{< fa scroll >}} Data literacy**\n\nIdentify, interpret and evaluate data analysis procedures and results\n:::\n\n::: {.callout}\n**{{< fa flask-vial >}} Research skills**\n\nDesign, implement, and communicate quantitative research\n:::\n\n::: {.callout}\n**{{< fa arrows-spin >}} Reproducible workflows**\n\nApply programmatic strategies to develop and collaborate on reproducible research projects\n:::\n\n---\n\n<!-- Show a collage of visuals, tables, websites to provide an idea of the things that students will be able to do! -->\n\n...\n\n# Approach\n\n-\n\n# Resource setup\n\n## Install software\n\n- [R](https://cran.r-project.org/)\n- [Docker](https://www.docker.com/)\n- [Git](https://git-scm.com/) -- Windows users should also install [Git Bash](https://gitforwindows.org/)\n\n## Create accounts\n\n- [GitHub](https://education.github.com/pack/join) Education\n- [Docker Hub](https://hub.docker.com/signup)\n\n## Getting started: R + RStudio\n\nOne time:\n\n1. Open Docker Desktop\n2. Search for the `qtalr/lin380` image\n3. Run the image (with password)\n4. Open the container in web browser\n5. Log in to RStudio Server (with password)\n\nTo start working:\n\n1. Open Docker Desktop\n2. Start the container\n3. Open the container in web browser\n4. Log in to RStudio Server (with password)\n\n## Getting started: Git + GitHub\n\nOne time:\n\n1. Open RStudio\n2. Create a new project from version control\n3. Select Git\n4. Enter the repository URL (`*.git`)\n5. Create a new project\n\n## Random coding slide {.smaller}\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\n# Load packages\nlibrary(tidyverse)\nlibrary(tidytext)\n\n# Create data frame with a few sentences and a document id\ndf <- tibble(\n  doc_id = c(1, 2, 3, 4, 5, 6),\n  text = c(\n    \"The quick brown fox jumps over the lazy dog.\",\n    \"The five boxing wizards jump quickly.\",\n    \"Pack my box with five dozen liquor jugs.\",\n    \"How vexingly quick daft zebras jump!\",\n    \"Bright vixens jump; dozy fowl quack.\",\n    \"Jackdaws love the big sphinx of quartz.\"\n  )\n)\n\n# Preview\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n> # A tibble: 6 Ã— 2\n>   doc_id text                                        \n>    <dbl> <chr>                                       \n> 1      1 The quick brown fox jumps over the lazy dog.\n> 2      2 The five boxing wizards jump quickly.       \n> 3      3 Pack my box with five dozen liquor jugs.    \n> 4      4 How vexingly quick daft zebras jump!        \n> 5      5 Bright vixens jump; dozy fowl quack.        \n> 6      6 Jackdaws love the big sphinx of quartz.\n```\n:::\n:::\n\n\n::: {.fragment .current-only data-code-focus=\"1-3\"}\nLoad the necessary packages\n:::\n\n::: {.fragment .current-only data-code-focus=\"5-16\"}\nCreate a data frame with a few sentences and a document id\n:::\n\n::: {.fragment .current-only data-code-focus=\"18-19\"}\nPreview the data frame\n:::",
    "supporting": [
      "day-01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}