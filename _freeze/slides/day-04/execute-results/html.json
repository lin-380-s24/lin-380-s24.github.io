{
  "hash": "6b669ada7be647c1bda78570346c8eac",
  "result": {
    "markdown": "---\ntitle: \"Academic writing with Quarto\"\nsubtitle: \"Enabling more productive scholarly communication\"\ndate: \"2024-01-26\"\ncategories: [quarto, front-matter, figures, tables, citations, tables-of-contents, cross-references, code, code-blocks]\ndraft: true\n---\n\n\n## Overview\n\n- Review components of a Quarto document\n- Review academic writing features:\n  - Numbered sections\n  - Tables of contents\n  - Cross-referencing tables and figures\n  - In-line citations and references\n\n# Quarto\n\nQuarto documents have two main parts: front matter and content.\n\n## Front matter\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n```quarto\n---\ntitle: \"Academic writing with Quarto\"\nformat: pdf\n---\n```\n:::\n\n::: {.column width=\"40%\"}\n![](images/front-matter.png)\n:::\n::::\n\n\n\n## Front matter + content\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n```{.quarto code-line-numbers=\"5-8\"}\n---\ntitle: \"Academic writing with Quarto\"\nformat: pdf\n---\n\n## Overview\n\nThis is my overview of this important topic. ...\n```\n:::\n\n::: {.column width=\"40%\"}\n![](images/front-matter-content.png)\n:::\n::::\n\n\n## Front matter + content + code\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n````{.quarto code-line-numbers=\"10-13\"}\n---\ntitle: \"Academic writing with Quarto\"\nformat: pdf\n---\n\n## Overview\n\nThis is my overview of this important topic. ...\n\n```{{r}}\nx <- 1:10\nx\n```\n\nThis code shows us the values of `x`.\n````\n:::\n\n::: {.column width=\"40%\"}\n![](images/front-matter-content-code.png)\n:::\n::::\n\n# Academic writing features\n\n## Numbered sections\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n\n```{.quarto code-line-numbers=\"3-5\"}\n---\ntitle: \"Academic writing with Quarto\"\nformat:\n  pdf:\n    number-sections: true\n---\n\n## Overview\n\n## Setup\n\n### Install Quarto\n\n### Create a new Quarto project\n```\n:::\n\n::: {.column width=\"40%\"}\n![](images/numbered-sections.png)\n:::\n::::\n\n## Tables of contents\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n```{.quarto code-line-numbers=\"6-7\"}\n---\ntitle: \"Academic writing with Quarto\"\nformat:\n  pdf:\n    number-sections: true\n    toc: true\n    toc-depth: 1\n---\n\n## Overview\n\n## Setup\n\n### Install Quarto\n\n### Create a new Quarto project\n```\n:::\n\n::: {.column width=\"40%\"}\n![](images/toc-depth.png)\n:::\n::::\n\n## Cross-referencing tables\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n```{.quarto code-line-numbers=\"10-15|8\"}\n---\ntitle: \"Academic writing with Quarto\"\nformat: pdf\n---\n\n## Overview\n\nView @tbl-test below.\n\n| Column 1 | Column 2 | Column 3 |\n|----------|----------|----------|\n| A        | B        | C        |\n| D        | E        | F        |\n\n: A simple markdown table {#tbl-test}\n```\n:::\n\n::: {.column width=\"40%\"}\n![](images/cross-ref-table.png)\n:::\n::::\n\n\n## Cross-referencing figures\n\n:::: {.columns}\n::: {.column width=\"60%\"}\n````{.quarto code-line-numbers=\"10-15|8\"}\n---\ntitle: \"Academic writing with Quarto\"\nformat: pdf\n---\n\n## Overview\n\nView @fig-test below.\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(1:10)\n```\n\n::: {.cell-output-display}\n![A test plot!](day-04_files/figure-revealjs/fig-test-1.png){#fig-test width=960}\n:::\n:::\n````\n:::\n\n::: {.column width=\"40%\"}\n![](images/cross-ref-figure.png)\n:::\n::::\n\n# Lab 01: Academic writing with Quarto\n\n## Setup\n\n![](images/lab-01-startup.gif)\n\n",
    "supporting": [
      "day-04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}