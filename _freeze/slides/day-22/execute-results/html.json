{
  "hash": "faa83b34b3c85a8250d9ce2f74271ca9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Infer\"\nsubtitle: |\n  \"People generally see what they look for, and hear what they listen for.\"\\\n  --- Harper Lee, To Kill a Mockingbird\ndate: \"2024-04-10\"\ncategories: [analysis, inference, simulation, infer]\nwebr:\n  show-startup-message: false\n  packages: ['infer', 'dplyr', 'ggplot2']\n  message: false\n---\n\n\n## Overview\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n- Orientation\n- Statistical inference\n  - Workflow with `infer`\n:::\n\n::: {.column width=\"50%\"}\n![](images/infer-ai.png)\n:::\n::::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(readr)\n\nbrn_lob_tbl <-\n  corpora::BrownLOBPassives |>\n  as_tibble() |>\n  rename(\n    cat_id = id,\n    pass_n = passive,\n    word_n = n_w,\n    sent_n = n_s,\n    var = lang\n  )\n\npass_rate_tbl <-\n  brn_lob_tbl |>\n  mutate(\n    pass_rate = (pass_n / sent_n) * 10\n  ) |>\n  select(cat_id, var, pass_rate, genre)\n\nwrite_csv(pass_rate_tbl, \"slides/data/pass_rate.csv\")\n```\n:::\n\n```{=html}\n<style>\ntable {\n  font-size: 0.8em;\n}\n</style>\n```\n\n\n```{webr-r}\n#| context: setup\n\n# Load the data\npass_rate_tbl <-\n  read.csv(\"https://raw.githubusercontent.com/lin-380-s24/lin-380-s24.github.io/main/slides/data/pass_rate.csv\") |>\n  as_tibble() |>\n  mutate(\n      var = factor(var, labels = c(\"American\", \"British\")),\n      genre = factor(genre, labels = c(\"Adventure\", \"Fiction\", \"Learned\", \"Misc\", \"Editorial\", \"Reportage\", \"Romance\", \"Scifi\", \"Hobbies\"))\n  ) |>\n  select(cat_id, var, genre, pass_rate)\n\n# Display the first few rows\npass_rate_tbl\n\ntheme_set(theme_minimal())\n```\n\n## Process\n\n![The Big Picture](images/qtal-big-picture.png)\n\n![](images/you-are-here.drawio.png){.absolute top=50 right=225}\n\n# Orientation\n\n## Inferential Data Analysis\n\n:::: {.columns}\n::: {.column width=\"33%\"}\n**Goal~~s~~**\n\n- Assess hypotheses\n:::\n\n::: {.column width=\"33%\"}\n**When to use**\n\n- To make inferences about a population\\\n*generalize from a sample*\n:::\n\n::: {.column width=\"33%\"}\n**How to use**\n\n- Identify, Inspect, Interrogate, Interpret\n- Non-iterative\n:::\n::::\n\n# Statistical inference\n\n## Paradigm\n\n**Null Hypothesis Significance Testing (NHST)**\n\n- $H_0$ **Null hypothesis**: no effect\\\n*assumed true from the outset*\n- $H_1$ **Alternative hypothesis**: effect exists\\\n*only if we have evidence to reject the null hypothesis*\n\n**Evidence**: the likelihood of the observed statistic(s) if the null hypothesis is true is below some pre-specified threshold (significance level).\n\n## Approaches {.smaller}\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n**Theory-based NHST**\n\n- Classical\n- Based on theoretical distributions\n  - Requires assumptions about the data (*ex.* parametric, non-parametric)\n- Relies on conceptual understanding of mathematical properties\n  - Tends to be more difficult to understand (for non-statisticians)\n:::\n\n::: {.column width=\"50%\"}\n**Simulation-based NHST**\n\n- Empirical\n- Based on resampling methods\n  - Does not require assumptions about the data\n- Frames the problem in terms of the data\n  - Easier to understand (for non-statisticians)\n:::\n::::\n\nThe `infer` [@R-infer] package is a simulation-based approach to NHST.\n\n## Workflow with `infer` {.smaller}\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n**A. Identify**\n\n- Map the hypothesis to the response and explanatory variable(s)\n- Determine the information types and relationship(s) between the variables.\n- Choose the relevant test statistic and significance level\n\n**B. Inspect**\n\n- Summarize and visualize the relationship(s) between the variables\n- Check assumptions (if necessary)\n- Choose resampling method (bootstrap, permutation, *etc*.)\n\n:::\n\n::: {.column width=\"50%\"}\n**C. Interrogate**\n\n- Generate the null distribution\n  - Specify the relationship(s)\n- Calculate the observed test statistic\n- Calculate the p-value\n- Generate the resampling distribution of the test statistic\n- Calculate the confidence interval\n\n**D. Interpret**\n\n- Evaluate p-value and confidence interval\n- Evaluate evidence in the context of the research question\n\n:::\n::::\n\n## Statistical test designs {.smaller}\n\n| Scenario | Explanatory variable(s) | Statistical test | `infer` |\n|:---------|:------------------------|:-----------------|:------------|\n| Univariate  | - | Proportion | `prop` |\n| Bivariate | Categorical | Difference in proportions | `diff in props` |\n| Bivariate (>2 levels) | Categorical (3+ levels) | Chi-square | `chisq` |\n| Multivariate  | Categorical or Numeric<br>(2+ variables) | Logistic regression | `fit()` |\n\n: Categorical {tbl-colwidths=\"[20, 30, 30, 20]\"}\n\n## Statistical test designs {.smaller}\n\n| Scenario | Explanatory variable(s) | Statistical test | `infer`\n|:---------|:------------------------|:-----------------|:-----------------|\n| Univariate | - | Mean | `mean` |\n| Bivariate  | Numeric | Correlation | `correlation` |\n| Bivariate | Categorical (2 levels) | Difference in means | `diff in means` |\n| Bivariate | Categorical (3+ levels ) | ANOVA | `f` |\n| Multivariate  | Numeric or Categorical (2+) | Linear regression | `fit()` |\n\n: Numeric {tbl-colwidths=\"[20, 30, 30, 20]\"}\n\n## Case study: Passives x Variety\n\n| | |\n|---|---|\n| RQ | Difference in passives between American and British English |\n| Population | Written American and British English |\n| Hypothesis | British English uses more passives than American English |\n| Null hypothesis | No difference in passives between American and British English, or American English uses more passives |\n\n: Case study {tbl-colwidths=\"[30, 70]\"}\n\n## Identify {.smaller .scrollable}\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n| | |\n|---|---|\n| Mapping | `pass_rate ~ var` |\n| Information types | Resp: num, Exp: cat (2 levels) |\n| Test statistic | Difference in means |\n| Significance level | 0.05 |\n:::\n\n::: {.column width=\"50%\"}\n\n```{webr-r}\n# Dataset\npass_rate_tbl\n\n# Specify the relationship\npass_var_spec <-\n  pass_rate_tbl |>\n  specify(pass_rate ~ var)\n\n# Preview\npass_var_spec\n\n```\n:::\n::::\n\n## Inspect: summaries {.smaller .scrollable}\n\nWith a bivariate relationship where the explanatory variable has two levels, we can use a boxplot or density plot to visualize the distribution of the response variable.\n\n```{webr-r}\n# Density plot\npass_rate_tbl |>\n  ggplot(aes(x = pass_rate, fill = var)) +\n  geom_density(alpha = 0.75) +\n  labs(\n    x = \"Passive rate (per 10 sentences)\",\n    y = \"Frequency\",\n    fill = \"Variety\"\n  )\n\npass_rate_tbl |>\n  ggplot(aes(x = var, y = pass_rate, fill = var)) +\n  geom_boxplot(notch = TRUE) +\n  labs(\n    x = \"Variety\",\n    y = \"Passive rate (per 10 sentences)\",\n    fill = \"Variety\"\n  )\n```\n\n## Interrogate: calculate observed statistic {.smaller .scrollable}\n\n```{webr-r}\npass_var_obs <-\n  pass_var_spec |>\n  # British - American\n  calculate(stat = \"diff in means\", order = c(\"British\", \"American\"))\n\npass_var_obs\n```\n\n## Interrogate: generate null distribution {.smaller .scrollable}\n\n```{webr-r}\n#| message: false\npass_var_null <-\n  pass_var_spec |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"diff in means\", order = c(\"British\", \"American\"))\n\npass_var_null |> visualize()\npass_var_null |>\n  visualize() +\n  shade_p_value(obs_stat = pass_var_obs, direction = \"greater\")\n```\n\n## Interrogate: calculate p-value {.smaller .scrollable}\n\n```{webr-r}\npass_var_p <-\n  pass_var_null |>\n  get_p_value(obs_stat = pass_var_obs, direction = \"greater\")\n\npass_var_p\n```\n\n## Interrogate: generate resampling distribution {.smaller .scrollable}\n\n```{webr-r}\npass_var_boot <-\n  pass_var_spec |>\n  generate(reps = 1000, type = \"bootstrap\") |>\n  calculate(stat = \"diff in means\", order = c(\"British\", \"American\"))\n\npass_var_boot |> visualize()\n```\n\n## Interrogate: calculate confidence interval {.smaller .scrollable}\n\n```{webr-r}\npass_var_ci <-\n  pass_var_boot |>\n  get_confidence_interval(level = 0.95)\n\npass_var_ci\n```\n\n## Interpret {.smaller .scrollable}\n\n```{webr-r}\n# Evaluate the p-value\npass_var_p\n\n# Evaluate the confidence interval\npass_var_ci\n\npass_var_boot |>\n  visualize() +\n  shade_confidence_interval(pass_var_ci)\n```\n\n# Wrap-up\n\n## Final thoughts\n\n- Inferential data analysis is a powerful tool for making inferences about a population based on a sample.\n- The `infer` package provides a simulation-based approach to NHST that is easier to understand than classical methods.\n\n\n## Case study: Passives x Genre\n\n| | |\n|---|---|\n| RQ | Difference in passives between genres in English |\n| Population | Written English |\n| Hypothesis | More formal genres use more passives than less formal genres |\n| Null hypothesis | No difference in passives between genres, or less formal genres use more passives |\n\n: Case study {tbl-colwidths=\"[30, 70]\"}\n\n## Identify {.smaller .scrollable}\n\n:::: {.columns}\n::: {.column width=\"50%\"}\n\n| | |\n|---|---|\n| Mapping | `pass_rate ~ genre` |\n| Information types | Resp: num, Exp: cat (9 levels) |\n| Test statistic | ANOVA (`f`) |\n| Significance level | 0.05 |\n:::\n\n::: {.column width=\"50%\"}\n\n```{webr-r}\n# Dataset\npass_rate_tbl\n\n# Specify the relationship\npass_genre_spec <-\n  pass_rate_tbl |>\n  specify(pass_rate ~ genre)\n\n# Preview\npass_genre_spec\n\n```\n\n:::\n::::\n\n## Inspect: summaries {.smaller .scrollable}\n\n```{webr-r}\n#| message: false\n# Density plot\npass_rate_tbl |>\n  ggplot(aes(x = pass_rate, fill = genre)) +\n  geom_density(alpha = 0.75) +\n  labs(\n    x = \"Passive rate (per 10 sentences)\",\n    y = \"Frequency\",\n    fill = \"Genre\"\n  )\n\npass_rate_tbl |>\n  ggplot(aes(x = genre, y = pass_rate, fill = genre)) +\n  geom_boxplot(notch = TRUE) +\n  labs(\n    x = \"Genre\",\n    y = \"Passive rate (per 10 sentences)\",\n    fill = \"Genre\"\n  )\n```\n\n## Interrogate: calculate observed statistic {.smaller .scrollable}\n\n```{webr-r}\npass_genre_obs <-\n  pass_genre_spec |>\n  calculate(stat = \"f\")\n\npass_genre_obs\n```\n\n## Interrogate: generate null distribution {.smaller .scrollable}\n\n```{webr-r}\npass_genre_null <-\n  pass_genre_spec |>\n  hypothesize(null = \"independence\") |>\n  generate(reps = 1000, type = \"permute\") |>\n  calculate(stat = \"f\")\n\npass_genre_null |> visualize()\n```\n\n## Interrogate: calculate p-value {.smaller .scrollable}\n\n```{webr-r}\npass_genre_p <-\n  pass_genre_null |>\n  get_p_value(obs_stat = pass_genre_obs, direction = \"two-sided\")\n\npass_genre_p\n```\n\n## Interrogate: generate resampling distribution {.smaller .scrollable}\n\n```{webr-r}\npass_genre_boot <-\n  pass_genre_spec |>\n  generate(reps = 1000, type = \"bootstrap\") |>\n  calculate(stat = \"f\")\n```\n\n## Interrogate: calculate confidence interval {.smaller .scrollable}\n\n```{webr-r}\npass_genre_ci <-\n  pass_genre_boot |>\n  get_confidence_interval(level = 0.95)\n\npass_genre_ci\n```\n\n## Interpret\n\n```{webr-r}\n# Evaluate the p-value\npass_genre_p\n\n# Evaluate the confidence interval\npass_genre_ci\n\npass_genre_boot |>\n  visualize() +\n  shade_confidence_interval(pass_genre_ci)\n```\n\n## References\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}