---
title: "Scaffolding reproducible research"
subtitle: "A template for reproducible research"
date: "2024-02-16"
categories: [research, reproducible-research, git, github, fork, clone, push]
---

## Overview

:::: {.columns}
::: {.column width="60%"}
- GitHub account setup
- Git and GitHub on RStudio setup
- Complete [Lab 04](https://github.com/lin-380-s24/lab-04) using Git and GitHub
:::

::: {.column width="40%"}
![](images/ladder.webp)
:::
::::

# Setup

## GitHub {.scrollable}

:::: {.columns}
::: {.column width="40%"}
- [Create an account on GitHub](https://github.com/)
- Use `@wfu.edu` email address
- Create (and save) a strong password
:::

::: {.column width="60%"}
![](images/git-account-1.gif)
:::
::::

## GitHub {.scrollable}

:::: {.columns}
::: {.column width="40%"}
- Get code in your email inbox
- Select options (optional)
:::

::: {.column width="60%"}
![](images/git-account-2.gif)\
:::
::::

## Git on RStudio {.smaller}

Git is already on your RStudio container. We *do* need to configure it.

:::: {.columns}
::: {.column width="50%"}
1. Open the terminal.
2. Copy/ paste (and edit) the following commands:

```bash
git config --global user.name "Your github username"
```
\
```bash
git config --global user.email "your github email address"
```
\
```bash
git config --global credential.helper 'cache --timeout=10000000'
```
\
```bash
git config --global --list
```

If `credential.helper` appears on two lines, one being `cache --timeout=3600`, then unset it with:

```bash
sudo git config --system --unset credential.helper
```
:::

::: {.column width="50%"}
![](images/rstudio-git-config.gif)
:::
::::

## Git on RStudio {.smaller}

Linking RStudio to GitHub

:::: {.columns}
::: {.column width="40%"}
Open the Console tab and type:

```r
library(usethis)
library(gitcreds)

create_github_token()
```

Opens a browser window to create a token.

Click "Generate token" and copy the token.

In the Console tab, type:

```r
gitcreds_set()
```

Paste the token and press Enter.
:::

::: {.column width="60%"}
![](images/rstudio-github-config.gif)
:::
::::

::: {.aside}
Install the `usethis` [@R-usethis] and `gitcreds` [@R-gitcreds] packages if they are not already installed. `install.packages()` or the "Packages" tab in RStudio can be used to install the packages.
:::

## Git on RStudio (alternative) {.smaller}

Getting your GitHub token (without `usethis`)

1. Go to the [Tokens (classic) page on GitHub](https://github.com/settings/tokens).
2. Click "Generate new token".
   1. Select "Generate new token (classic)"
3. Complete the following:
   1. Name the token
   2. Change expiration to 90 days.
   3. Select `repo`, `workflow`, `gist`, and `user` scopes.
4. Click "Generate token".
5. Copy the token to your clipboard.

## Git on RStudio (alternative) {.smaller}

Setting your credentials in RStudio (without `gitcreds`)

In the RStudio Console tab, type:

```r
library(credentials)

git_credential_ask()
```
*Ignore the warning message after loading the package.*

- In the username field, type your **GitHub username**.
- In the password field, paste the **GitHub token** you copied.

::: {.aside}
Install the `credentials` [@R-credentials] package if it is not already installed. `install.packages()` or the "Packages" tab in RStudio can be used to install the package.
:::

# Using Git and GitHub

## Local/ Remote scenarios

![](images/github-features-drawio.png)

## Scenario B: Fork a repository

:::: {.columns}
::: {.column width="40%"}
- Go to the [Lab 04](https://github.com/lin-380-s24/lab-04) repository
- Click on the "Fork" button
- (No need to change the repo name)
- Click "Create Fork"
:::

::: {.column width="60%"}
![](images/github-fork.gif)
:::
::::

## Scenario B: Clone a repository

:::: {.columns}
::: {.column width="40%"}
- Go to the repository you forked\
*should happen automatically*
- Copy the repo URL
- Open RStudio
- Create new project from version control
:::

::: {.column width="60%"}
![](images/github-clone.gif)
:::
::::

## Scenario B: Edit, commit, and push

Test the setup by making a change to the `README.md` file.

:::: {.columns}
::: {.column width="40%"}
- Edit the `README.md` file
- Stage the changes
- Commit the changes
- Push the changes to the remote repository
:::

::: {.column width="60%"}
![](images/github-push.gif)
:::
::::

## Scenario B: Verify changes on GitHub

We can see that our changes are reflected on GitHub

:::: {.columns}
::: {.column width="40%"}
- Number of commits increases
- The changed files show time of last change
- The changes are visible in the `README.md` file
:::

::: {.column width="60%"}
![](images/github-verify.gif)
:::
::::

## Discussions/ Issues {.smaller}

We have a course hub for Discussions. You can add Issues to repos.

:::: {.columns}
::: {.column width="40%"}
[Discussion](https://github.com/orgs/lin-380-s24/discussions)

- Ask questions
- Share ideas
- Get feedback

Issues

- Enable in the repo settings
- Create issues/ problems/ bugs
- Assign to collaborators
- Reference lines of code
- Reference commits
:::

::: {.column width="60%"}
![](images/github-discussions.png)
:::
::::

## GitHub roster

<iframe src="https://docs.google.com/forms/d/e/1FAIpQLSflXb_zAduJTstWkCWrMMDeSfNqLkPZy2PaJRDpaq8u2p4aJQ/viewform?embedded=true" width="640" height="984" frameborder="0" marginheight="0" marginwidth="0">Loadingâ€¦</iframe>


## Student Developer Pack (optional)

:::: {.columns}
::: {.column width="40%"}
- [GitHub Student Developer Pack](https://education.github.com/pack)
- Free access to the best developer tools in one place
- Free offers for students
:::

::: {.column width="60%"}
![](images/git-student-account-1.gif)
:::
::::

## References

